{"version":3,"sources":["components/Table.js","App.js","reportWebVitals.js","index.js"],"names":["fuzzyTextFilterFn","rows","id","filterValue","matchSorter","keys","row","values","Table","columns","data","filterTypes","React","useMemo","fuzzyText","text","filter","rowValue","undefined","String","toLowerCase","startsWith","defaultColumn","Filter","useTable","useFilters","getTableProps","getTableBodyProps","headerGroups","prepareRow","state","visibleColumns","preGlobalFilteredRows","setGlobalFilter","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","i","getRowProps","cells","cell","getCellProps","NumberRangeColumnFilter","preFilteredRows","setFilter","min","length","max","forEach","Math","style","display","value","type","onChange","e","val","target","old","parseInt","placeholder","width","marginRight","marginLeft","App","useState","setData","search","setSearch","Header","accessor","Cell","prop","href","useEffect","url","fetch","then","result","json","itemList","searchResult","findItemsByKeywordsResponse","item","createData","catch","console","log","list","push","title","viewItemURL","price","sellingStatus","currentPrice","__value__","currency","country","location","shippingInfo","shipToLocations","className","event","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5052e770.chunk.js","sourcesContent":["import React from 'react'\nimport { useTable, useFilters } from 'react-table'\nimport {matchSorter} from 'match-sorter'\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n    return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n}\n\nfunction Table({ columns, data }) {\n    const filterTypes = React.useMemo(\n        () => ({\n            fuzzyText: fuzzyTextFilterFn,\n            text: (rows, id, filterValue) => {\n                return rows.filter(row => {\n                  const rowValue = row.values[id]\n                  return rowValue !== undefined\n                    ? String(rowValue)\n                        .toLowerCase()\n                        .startsWith(String(filterValue).toLowerCase())\n                    : true\n                })\n            }\n        }), []\n    )\n\n    const defaultColumn = React.useMemo(() => ({Filter: ''}), []);\n\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        state,\n        visibleColumns,\n        preGlobalFilteredRows,\n        setGlobalFilter\n    } = useTable(\n            {\n              columns,\n              data,\n              defaultColumn,\n              filterTypes,\n            },\n            useFilters)\n    \n    return (\n        <table {...getTableProps()}>\n            <thead>\n                {headerGroups.map(headerGroup => (\n                    <tr {...headerGroup.getHeaderGroupProps()}>\n                        {headerGroup.headers.map(column => (\n                            <th {...column.getHeaderProps()}>\n                                {column.render('Header')}\n                                <div>{column.canFilter ? column.render('Filter') : null}</div>\n                            </th>\n                        ))}\n                    </tr>\n                ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                            {row.cells.map(cell => {\n                                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                            })}\n                        </tr>\n                    )\n                })}\n            </tbody>\n        </table>\n    )\n}\nexport {Table};","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport {Table} from './components/Table'\n\nfunction NumberRangeColumnFilter({column: { filterValue = [], preFilteredRows, setFilter, id }}) {\n    const [min, max] = React.useMemo(() => {\n        let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n        let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n        preFilteredRows.forEach(row => {\n            min = Math.min(row.values[id], min);\n            max = Math.max(row.values[id], max);\n        });\n\n        return [min, max]\n    }, [id, preFilteredRows])\n\n    return (\n        <div style={{display: 'flex'}}>\n            <input\n                value={filterValue[0] || ''}\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value\n                  setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n                }}\n                placeholder={`Min (${min})`}\n                style={{\n                  width: '70px',\n                  marginRight: '0.5rem',\n                }}\n            />\n            to\n            <input\n                value={filterValue[1] || ''}\n                type=\"number\"\n                onChange={e => {\n                  const val = e.target.value\n                  setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n                }}\n                placeholder={`Max (${max})`}\n                style={{\n                  width: '70px',\n                  marginLeft: '0.5rem',\n                }}\n            />\n        </div>\n    )\n};\nconst App = () => {\n    const [data, setData] = useState([]);\n    const [search, setSearch] = useState('');\n    const columns = React.useMemo(() => [\n        {\n            Header: 'Title',\n            accessor: 'title'\n        },\n        {\n            Header: 'Url',\n            accessor: 'viewItemURL',\n            Cell: prop => <a href={prop.value}>{prop.value}</a>\n        },\n        {\n            Header: 'Price',\n            accessor: 'price',\n            Filter: NumberRangeColumnFilter,\n            filter: 'between'\n        },\n        {\n            Header: 'Currency',\n            accessor: 'currency'\n        },\n        {\n            Header: 'Country',\n            accessor: 'country'\n        },\n        {\n            Header: 'Location',\n            accessor: 'location'\n        },\n        {\n            Header: 'ShippingInfo',\n            accessor: 'shippingInfo'\n        }\n    ], []);\n\n    useEffect(() => {\n        if (search === '') return\n        const url = `http://svcs.sandbox.ebay.com/services/search/FindingService/v1?OPERATION-NAME=findItemsByKeywords&SERVICE-VERSION=1.0.0&SECURITY-APPNAME=WandoInt-217b-42d8-a699-e79808dd505e&keywords=${search}&RESPONSE-DATA-FORMAT=JSON`;\n        \n        fetch(url)\n            .then(result => result.json())\n            .then(itemList => {\n                const findItemResponse = itemList.findItemsByKeywordsResponse[0];\n                const {searchResult} = findItemResponse;\n                \n                if (searchResult && searchResult.length > 0) {\n                    searchResult[0].item && createData(searchResult[0].item);\n                } else {\n                    setData([]);\n                }\n            })\n            .catch(e => console.log(e));\n    }, [search]);\n\n    const searchHandler = function (event) {\n       setSearch(event.target.value);\n    };\n    const createData = (list) => {\n        let data = [];\n        list.forEach(item => {\n            data.push({\n                title: item.title,\n                viewItemURL: item.viewItemURL,\n                price: item.sellingStatus[0].currentPrice[0].__value__,\n                currency: item.sellingStatus[0].currentPrice[0]['@currencyId'],\n                country: item.country,\n                location: item.location,\n                shippingInfo: item.shippingInfo[0].shipToLocations[0]\n            });\n        });\n        setData(data);\n    };\n    \n    return (\n        <>\n            <div className=\"search-area\">\n                Search by: <input value={search} type=\"text\" onChange={searchHandler}/>\n            </div>\n            {(search === '')\n                ? <p>Enter keywords in text field to start new search.</p>\n                : (data.length > 0 ? <Table columns={columns} data={data} /> : <p>No results</p>)\n            }\n        </>\n    )\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}